import numpy as np
import matplotlib.pyplot as plt

def quadratic_solution(a, b, c):
    discriminant = b**2 - 4*a*c
    if discriminant < 0:
        return None
    elif discriminant == 0:
        root = -b / (2*a)
        return [root]
    else:
        root1 = (-b + np.sqrt(discriminant)) / (2*a)
        root2 = (-b - np.sqrt(discriminant)) / (2*a)
        return [root1, root2]

def plot_quadratic(a, b, c, roots=None):
    x = np.linspace(-10, 10, 100)
    y = a*x**2 + b*x + c

    plt.plot(x, y, label=f'{a}x^2 + {b}x + {c}')
    
    if roots:
        plt.scatter(roots, [0, 0], color='red', marker='o', label='Roots')

    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Quadratic Equation')
    plt.legend()
    plt.show()

# User input
a_keyboard = float(input('Enter the value of a: '))
b_keyboard = float(input('Enter the value of b: '))
c_keyboard = float(input('Enter the value of c: '))
roots_keyboard = quadratic_solution(a_keyboard, b_keyboard, c_keyboard)
plot_quadratic(a_keyboard, b_keyboard, c_keyboard, roots_keyboard)
